IN 10H ; FULL ACCESS TO MEMORY
ARXH: 
	MVI A,FFH ;INITIALIZE THE LEDS TO BE ALL CLOSED
	MVI C,01H ;INITIALIZE THE FIRST POSSIBLE LED TO BE ONE 
	STA 3000H ;BY STORING THE VALUE OF A WE SET OFF THE LEDS 
	LDA 2000H ;READ INPUT
	CPI 00H ;WE CHECK IF THE INPUT IS 00H 
	JZ BASE_CASE ;IF NONE OF THE BITS OF THE INPUT IS ONE JMP TO BASE CASE
	
LOOP_1: 
	RAR ; RIGHT SHIFT WITH THE CARRY ON
	MOV B,A ;WE KEEP A COPY OF THE SHIFTER REG A
	JC SET_LEDS ; MOVE TO THE SHOW LEDS IF WE HAVE A CURRY IN THE CURRENT "INDEX"
	MOV A,C ; WE MOVE THE CONTENT OF C TO A
	RLC ; WE SHIFT IT ONE POSITION TO THE LEFT BECAUSE C SHOWS WHICH LED SHOULD BE ON
	MOV C,A ; RECOVER THE VALUE OF C
	MOV A,B ; RECOVER THE VALUE OF A
	JMP LOOP_1 ; ITERATE SINCE NO CURRY FOUND(NO 1 BIT YET)
BASE_CASE:
 	MVI A,FFH ; WE SECURE THAT THE VALUE OF THE ACCUMULATOR IS SETTING ALL THE LEDS 1
	STA 3000H ; DUE TO THE NEGATIVE LOGIC WE SET THEM OFF
	JMP ARXH ; RESTART
SET_LEDS:
	MOV A,C ; C IS MOVING INTO THE ACCUMULATOR
	CMA ; COMPLEMENT THE VALUE OF THE ACCUMULAGTOR TO THE NEGATIVE LOGIC OF LEDS
	STA 3000H ;PRINT THE OUTPUT
	JMP ARXH ;RESTART
END
	 